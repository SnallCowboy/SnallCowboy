(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{453:function(t,a,s){"use strict";s.r(a);var r=s(54),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"创建型模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建型模式"}},[t._v("#")]),t._v(" 创建型模式")]),t._v(" "),s("h2",{attrs:{id:"工厂方法模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法模式"}},[t._v("#")]),t._v(" "),s("RouterLink",{attrs:{to:"/design-patterns/create/create/"}},[t._v("工厂方法模式")])],1),t._v(" "),s("p",[t._v("在父类中提供一个创建对象的接口以允许子类决定实例化对象的类型。")]),t._v(" "),s("h2",{attrs:{id:"抽象工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象工厂模式"}},[t._v("#")]),t._v(" 抽象工厂模式")]),t._v(" "),s("p",[t._v("让你能创建一系列相关的对象， 而无需指定其具体类。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    \r\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),s("h2",{attrs:{id:"单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),s("p",[t._v("让你能够保证一个类只有一个实例，并提供一个访问该实例的全局节点。")]),t._v(" "),s("h2",{attrs:{id:"生产器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产器模式"}},[t._v("#")]),t._v(" 生产器模式")]),t._v(" "),s("p",[t._v("使你能够分步骤创建复杂对象。该模式允许你使用相同的创建代码生成不同类型和形式的对象。")]),t._v(" "),s("h2",{attrs:{id:"原型模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型模式"}},[t._v("#")]),t._v(" 原型模式")]),t._v(" "),s("p",[t._v("让你能够复制已有对象，而又无需使代码依赖它们所属的类。")])])}),[],!1,null,null,null);a.default=e.exports}}]);