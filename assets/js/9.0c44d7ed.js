(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{416:function(t,s,a){t.exports=a.p+"assets/img/segregation.e9b12ff2.jpg"},417:function(t,s,a){t.exports=a.p+"assets/img/composite.b3190575.png"},456:function(t,s,a){"use strict";a.r(s);var n=a(54),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"设计模式七大原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计模式七大原则"}},[t._v("#")]),t._v(" 设计模式七大原则")]),t._v(" "),n("p",[t._v("设计模式原则，其实就是程序员在编程时，应当遵守的原则，也是各种设计模式的基础(即:设计模式为什么这样设计的依据)")]),t._v(" "),n("h2",{attrs:{id:"常用的七大原则有"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用的七大原则有"}},[t._v("#")]),t._v(" 常用的七大原则有")]),t._v(" "),n("ul",[n("li",[t._v("单一职责原则")]),t._v(" "),n("li",[t._v("接口隔离原则")]),t._v(" "),n("li",[t._v("依赖倒转(倒置)原则")]),t._v(" "),n("li",[t._v("里氏替换原则")]),t._v(" "),n("li",[t._v("开闭原则")]),t._v(" "),n("li",[t._v("迪米特法则")]),t._v(" "),n("li",[t._v("合成复用原则")])]),t._v(" "),n("h2",{attrs:{id:"单一职责原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单一职责原则"}},[t._v("#")]),t._v(" 单一职责原则")]),t._v(" "),n("ul",[n("li",[t._v("降低类的复杂度，一个类只负责一项职责。")]),t._v(" "),n("li",[t._v("提高类的可读性,可维护性")]),t._v(" "),n("li",[t._v("降低变更引起的风险")]),t._v(" "),n("li",[t._v("通常情况下，我们应当遵守单一职责原则，只有逻辑足够简单，才可以在代码级违反单一职责原则;只有类中方法数量足够少，可以在方法级别保持单一职责原则")]),t._v(" "),n("li",[t._v("单一职责原则可以是类或方法都行")])]),t._v(" "),n("p",[n("strong",[t._v("方法单一职责原则案例")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vehicles")]),t._v(" vehicles "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vehicles")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误案例")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mistakeRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"船在水上"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mistakeRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"飞机在空中"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mistakeRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"汽车在公里"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确案例")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ferryRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"船"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("airplaneRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"飞机"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n        vehicles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"汽车"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * 交通工具类\r\n * 每个工具运行在对应的方法上\r\n */")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transportation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n     * 错误案例\r\n     */")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mistakeRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" transportation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n           "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transportation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"运行"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n     * 开船\r\n     */")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ferryRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ferry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ferry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"再水中上运行"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n     * 开飞机\r\n     */")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("airplaneRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" airplane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airplane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"再空中上运行"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n     * 开车\r\n     */")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleRun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" vehicle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehicle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"再公路上运行"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),n("h2",{attrs:{id:"接口隔离原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接口隔离原则"}},[t._v("#")]),t._v(" 接口隔离原则")]),t._v(" "),n("ul",[n("li",[t._v("客户端不应该依赖它不需要的接，即一个类对另一个类的依赖应该建立在最小的接口上")]),t._v(" "),n("li",[t._v("一个接口里面有多个方法,当多个类依赖这个接口的时候,发现有多个方法不需要这时候可以考虑,提取该接口公共方法进行拆分")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(416),alt:"segregation"}})]),t._v(" "),n("h2",{attrs:{id:"依赖倒转-倒置-原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖倒转-倒置-原则"}},[t._v("#")]),t._v(" 依赖倒转(倒置)原则")]),t._v(" "),n("ol",[n("li",[t._v("基本介绍")])]),t._v(" "),n("ul",[n("li",[t._v("高层模块不应该依赖低层模块，二者都应该依赖其抽象")]),t._v(" "),n("li",[t._v("抽象不应该依赖细节，细节应该依赖抽象")]),t._v(" "),n("li",[t._v("依赖倒转(倒置)的中心思想是面向接口编程")]),t._v(" "),n("li",[t._v("依赖倒转原则是基于这样的设计理念:相对于细节的多变性，抽象的东西要稳定多。以抽象为基础搭建的架构比以细节为基础的架构要稳定的多。在java中，抽指的是接口或抽象类，细节就是具体的实现类")]),t._v(" "),n("li",[t._v("使用接口或抽象类的目的是制定好规范，而不涉及任何具体的操作，把展现细节的任务交给他们的实现类去完成")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("依赖关系传递的三种方式和应")])]),t._v(" "),n("ul",[n("li",[t._v("接口传递")]),t._v(" "),n("li",[t._v("构避方法传递")]),t._v(" "),n("li",[t._v("setter方式传递")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("依赖倒转原则的注意事项和细节")])]),t._v(" "),n("ul",[n("li",[t._v("低层模块尽量都要有抽象类或接口，或者两者都有，程序稳定性更好.")]),t._v(" "),n("li",[t._v("变量的声明类型尽量是抽象类或接口,这样我们的变量引用和实际对象间，就存在一个缓冲层，利于程序扩展和优化")]),t._v(" "),n("li",[t._v("继承时遵循里氏替换原则")])]),t._v(" "),n("h2",{attrs:{id:"里氏替换原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#里氏替换原则"}},[t._v("#")]),t._v(" 里氏替换原则")]),t._v(" "),n("ol",[n("li",[t._v("OO中的继承性的思考和说明")])]),t._v(" "),n("ul",[n("li",[t._v("继承包含这样一层含义:父类中凡是已经实现好的方法，实际上是在设定规范和契约，虽然它不强制要求所有的子类必须遵循这些契约，但是如果子类对这些已经实现的方法任意修改，就会对整个继承体系造成破坏。")]),t._v(" "),n("li",[t._v("继承在给程序设计带来便利的同时，也带来了弊端。比如使用继承会给程序帶来侵入性，程序的可移植性降低，增加对象间的耦合性，如果一个类被其他的类所继承，则当这个类需要修改时，必须考虑到所有的子类，并且父类修改后，所有涉及到子类的功能都有可能产生故障")]),t._v(" "),n("li",[t._v("问题提出:在编程中，如何正确的使用继承? =>里氏替换原则")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("基本介绍")])]),t._v(" "),n("ul",[n("li",[t._v("所有引用基类的地方必须能透明地使用其子类的对象.")]),t._v(" "),n("li",[t._v("在使用继承时，遵循里氏替换原则，在子类中尽量不要重写父类的方法")]),t._v(" "),n("li",[t._v("里氏替换原则告诉我们，继承实际上让两个类耦合性增强了，在适当的情况下，可以通过聚合，组合，依赖来解决问题。")])]),t._v(" "),n("p",[t._v("通用的做法是:原来的父类和子类都继承-一个更通俗的基类，原有的继承关系去掉，采用依赖，聚合，组合等关系代替，")]),t._v(" "),n("h2",{attrs:{id:"开闭原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开闭原则"}},[t._v("#")]),t._v(" 开闭原则")]),t._v(" "),n("p",[t._v("基本介绍")]),t._v(" "),n("ul",[n("li",[t._v("开闭原则(Open Closed Principle)是编程中最基础、最重要的设计原则")]),t._v(" "),n("li",[t._v("一个软件实体如类，模块和函数应该对扩展开放(对提供方)，对修改关闭(对使用方)。用抽象构建框架，用实现扩展细节。")]),t._v(" "),n("li",[t._v("当软件需要变化时，尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。")]),t._v(" "),n("li",[t._v("编程中遵循其它原则，以及使用设计模式的目的就是遵循开闭原则。")])]),t._v(" "),n("h2",{attrs:{id:"迪米特法则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#迪米特法则"}},[t._v("#")]),t._v(" 迪米特法则")]),t._v(" "),n("p",[t._v("基本介绍")]),t._v(" "),n("ul",[n("li",[t._v("一个对象应该对其他对象保持最少的了解")]),t._v(" "),n("li",[t._v("类与类关系越密切，耦合度越大")]),t._v(" "),n("li",[t._v("迪米特法则(Demeter Principle)又叫最少知道原则，"),n("strong",[t._v("即一个类对自己依赖的类知道的越少越好")]),t._v("。也就是说，对于被依赖的类不管多么复杂，都尽量将逻辑封装在类的内部。对外除了提供的public方法，不对外泄露任何信息")]),t._v(" "),n("li",[t._v("迪米特法则还有个更简单的定义:只与直接的朋友通信")]),t._v(" "),n("li",[t._v("直接的朋友:每个对象都会与其他对象有耦合关系，只要两个对象之间有耦合关系，我们就说这两个对象之间是朋友关系。耦合的方式很多，依赖，关联，组合，聚合等。其中，我们称出现 "),n("strong",[t._v("成员变量，方法参数，方法返回值中的类")]),t._v(" 为直接的朋友，而出现在 "),n("strong",[t._v("局部变量中的类")]),t._v(" 不是直接的朋友。也就是说，陌生的类最好不要以局部变量的形式出现在类的内部。")])]),t._v(" "),n("h2",{attrs:{id:"合成复用原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#合成复用原则"}},[t._v("#")]),t._v(" 合成复用原则")]),t._v(" "),n("p",[t._v("原则是尽量使用合成/聚合的方式，而不是使用继承")]),t._v(" "),n("p",[n("img",{attrs:{src:a(417),alt:"segregation"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);