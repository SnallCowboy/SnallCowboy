(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{388:function(t,a,s){t.exports=s.p+"assets/img/1555902055367.0758a933.png"},436:function(t,a,s){"use strict";s.r(a);var r=s(54),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),r("h3",{attrs:{id:"索引概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引概述"}},[t._v("#")]),t._v(" 索引概述")]),t._v(" "),r("p",[t._v("MySQL官方对索引的定义为：索引（index）是帮助MySQL高效获取数据的数据结构（有序）。在数据之外，数据库系统还维护者满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据， 这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引。如下面的==示意图==所示 :")]),t._v(" "),r("p",[r("img",{attrs:{src:s(388),alt:"1555902055367"}})]),t._v(" "),r("p",[t._v("左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。为了加快Col2的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找快速获取到相应数据。")]),t._v(" "),r("p",[t._v("一般来说索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储在磁盘上。索引是数据库中用来提高性能的最常用的工具。")]),t._v(" "),r("h2",{attrs:{id:"索引优势劣势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引优势劣势"}},[t._v("#")]),t._v(" 索引优势劣势")]),t._v(" "),r("p",[t._v("优势")]),t._v(" "),r("p",[t._v("1） 类似于书籍的目录索引，提高数据检索的效率，降低数据库的IO成本。")]),t._v(" "),r("p",[t._v("2） 通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗。")]),t._v(" "),r("p",[t._v("劣势")]),t._v(" "),r("p",[t._v("1） 实际上索引也是一张表，该表中保存了主键与索引字段，并指向实体类的记录，所以索引列也是要占用空间的。")]),t._v(" "),r("p",[t._v("2） 虽然索引大大提高了查询效率，同时却也降低更新表的速度，如对表进行INSERT、UPDATE、DELETE。因为更新表时，MySQL 不仅要保存数据，还要保存一下索引文件每次更新添加了索引列的字段，都会调整因为更新所带来的键值变化后的索引信息。")])])}),[],!1,null,null,null);a.default=v.exports}}]);